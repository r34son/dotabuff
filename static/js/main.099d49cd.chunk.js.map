{"version":3,"sources":["components/Header/Header.tsx","components/MatchInfo/MatchInfo.tsx","components/Loading/Loading.tsx","components/MatchPage/MatchPage.tsx","components/Recent/Recent.tsx","components/PlayerInfo/PlayerInfo.tsx","components/PlayerPage/PlayerPage.tsx","components/IDForm/IDForm.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","_useState","useState","window","location","pathname","_useState2","Object","slicedToArray","current","setCurrent","styles","makeStyles","AppBar","background","Tab","color","classes","cn","react_default","a","createElement","className","position","Tabs","value","onChange","e","centered","textColor","indicatorColor","label","component","Link","to","MatchInfo","_ref","data","dire_score","match","cnMatchInfo","Loading","cnLoading","MatchPage","props","setMatch","_useState3","_useState4","success","setSuccess","_useState5","_useState6","loading","setLoading","cnMatch","useEffect","ID","params","id","fetch","concat","then","res","json","console","log","components_Loading_Loading","components_MatchInfo_MatchInfo","Recent","recent","cnRecent","map","react_router_dom","key","match_id","hero_id","kills","deaths","assists","PlayerInfo","player","wl","estimate","mmr_estimate","_player$profile","profile","avatarmedium","account_id","avatar","personaname","avatarfull","lastlogin","profileurl","win","lose","cnProfile","src","alt","href","Math","round","components_Recent_Recent","PlayerPage","setPlayer","setRecent","setWl","_useState7","_useState8","_useState9","_useState10","cnPlayerPage","components_PlayerInfo_PlayerInfo","IDForm","placeholder","forplayer","formatch","setID","path","cnID","type","target","App","components_Header_Header","react_router","exact","render","components_IDForm_IDForm","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.099d49cd.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport \"./Header.css\"\r\n\r\nconst Header = () => {\r\n    const [current, setCurrent] = useState(() => {\r\n        switch (window.location.pathname) {\r\n            case \"/\": return 0;\r\n            case \"/match/\": return 1;\r\n            case \"/player/\": return 2;\r\n            default: return 0;\r\n        }\r\n    });\r\n\r\n    const styles = makeStyles({\r\n        AppBar: {\r\n            background: '#222629'\r\n        },\r\n        Tab: {\r\n            color: '#94b4c3'\r\n        }\r\n    });\r\n\r\n    const cnHeader = cn(\"Header\");\r\n    const classes = styles();\r\n    return (\r\n        // <header className={cnHeader()}>\r\n        //     <ul className={cnHeader(\"List\")}>\r\n        //         <li className={cnHeader(\"Item\", {current: current == 0})} onClick={() => setCurrent(0)}>\r\n        //             <Link to=\"/\">Dotabuff</Link> \r\n        //         </li>\r\n        //         <li className={cnHeader(\"Item\", {current: current == 1})} onClick={() => setCurrent(1)}>\r\n        //             <Link to=\"/match/\">Match</Link> \r\n        //         </li>\r\n        //         <li className={cnHeader(\"Item\", {current: current == 2})} onClick={() => setCurrent(2)}>\r\n        //             <Link to=\"/player/\">Player</Link> \r\n        //         </li>\r\n        //     </ul>\r\n        // </header>\r\n        <AppBar className={classes.AppBar} position=\"static\">\r\n            <Tabs  \r\n                value={current} \r\n                onChange={(e, value) => setCurrent(value)} \r\n                centered \r\n                textColor=\"primary\" \r\n                indicatorColor=\"primary\"\r\n            >\r\n                <Tab className={classes.Tab} label=\"Dotabuff\" component={Link} to=\"/\"/>\r\n                <Tab className={classes.Tab} label=\"Match\" component={Link} to=\"/match/\"/>\r\n                <Tab className={classes.Tab} label=\"Player\" component={Link} to=\"/player/\"/>\r\n            </Tabs>\r\n        </AppBar>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./MatchInfo.css\"\r\n\r\ninterface Props{\r\n    data:{\r\n        dire_score: any,\r\n    },\r\n    match?:{\r\n        params:{\r\n            id: any\r\n        }\r\n    }\r\n}\r\n\r\nconst MatchInfo: React.FC<Props> = ({data, match}) => {\r\n    const {dire_score} = data;\r\n    const cnMatchInfo = cn(\"MatchInfo\");\r\n    return (\r\n        <div className ={cnMatchInfo()}>\r\n            <div>Match Info: {dire_score}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchInfo\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./Loading.css\"\r\n\r\nconst Loading = () => {\r\n    const cnLoading = cn(\"Loading\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={cnLoading()}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect } from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport IDForm from \"../IDForm/IDForm\"\r\nimport MatchInfo from \"../MatchInfo/MatchInfo\"\r\nimport \"./MatchPage.css\"\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst MatchPage = (props:any) => {\r\n    const [match, setMatch] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const cnMatch = cn(\"MatchPage\");\r\n\r\n    const getMatchInfo = (ID:number) => {\r\n        setLoading(true);\r\n        setSuccess(false);\r\n        fetch(`https://api.opendota.com/api/matches/${ID}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setMatch(data);\r\n            return data;\r\n        })\r\n        .then(data => console.log(data))\r\n        .then(() => setSuccess(true))\r\n        .then(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => getMatchInfo(props.match.params.id),[]);\r\n\r\n    return (\r\n        <main className={cnMatch()}>\r\n            {!success && loading && <Loading/>}\r\n           {success && <MatchInfo data={match}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MatchPage\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./Recent.css\"\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props{\r\n    recent: [{\r\n        assists: any,\r\n        deaths: any,\r\n        duration: any,\r\n        game_mode: any,\r\n        gold_per_min: any,\r\n        hero_damage: any,\r\n        hero_healing: any,\r\n        hero_id: any,\r\n        is_roaming: any,\r\n        kills: any,\r\n        lane: any,\r\n        lane_role: any,\r\n        last_hits: any,\r\n        leaver_status: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        party_size: any,\r\n        player_slot: any,\r\n        radiant_win: any,\r\n        start_time: any,\r\n        tower_damage: any,\r\n        version: any,\r\n        xp_per_min: any\r\n    }]\r\n}\r\n\r\nconst Recent: React.FC<Props> = ({recent}) => {\r\n    const cnRecent = cn(\"Recent\");\r\n    return (\r\n        <ul className={cnRecent()}>\r\n            {recent.map(match => \r\n                <Link className={cnRecent(\"Match\")} key={match.match_id} to={`/match/${match.match_id}`}>\r\n                    <div className={cnRecent(\"Hero\")}>\r\n                        {match.hero_id}\r\n                    </div>\r\n                    <div className={cnRecent(\"KDA\")}>\r\n                        {match.kills}/{match.deaths}/{match.assists}\r\n                    </div>\r\n                </Link>\r\n            )}  \r\n        </ul>          \r\n    )\r\n}\r\n\r\nexport default Recent\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport Recent from \"../Recent/Recent\"\r\nimport \"./PlayerInfo.css\"\r\n\r\ninterface Props{\r\n    player: {\r\n        mmr_estimate: {\r\n            estimate: any\r\n        },\r\n        profile:{\r\n            account_id: any,\r\n            avatar: any,\r\n            avatarmedium: any,\r\n            avatarfull: any,\r\n            lastlogin: any,\r\n            personaname: any,\r\n            profileurl: any\r\n        }\r\n    },\r\n    recent: [{\r\n        assists: any,\r\n        deaths: any,\r\n        duration: any,\r\n        game_mode: any,\r\n        gold_per_min: any,\r\n        hero_damage: any,\r\n        hero_healing: any,\r\n        hero_id: any,\r\n        is_roaming: any,\r\n        kills: any,\r\n        lane: any,\r\n        lane_role: any,\r\n        last_hits: any,\r\n        leaver_status: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        party_size: any,\r\n        player_slot: any,\r\n        radiant_win: any,\r\n        start_time: any,\r\n        tower_damage: any,\r\n        version: any,\r\n        xp_per_min: any\r\n    }],\r\n    wl: {\r\n        win: any,\r\n        lose: any\r\n    }\r\n}\r\n\r\nconst PlayerInfo: React.FC<Props> = ({player, recent, wl}) => {\r\n    const {\r\n        mmr_estimate:{\r\n                estimate\r\n            },\r\n        profile:{\r\n            account_id,\r\n            avatar,\r\n            avatarmedium,\r\n            avatarfull,\r\n            lastlogin,\r\n            personaname,\r\n            profileurl\r\n    }} = player;\r\n    const {\r\n        win,\r\n        lose\r\n    } = wl;\r\n    const cnProfile = cn(\"ProfileInfo\");\r\n    return (\r\n        <div className={cnProfile()}>\r\n            <div className={cnProfile(\"Header\")}>\r\n                <div className={cnProfile(\"Info\")}>\r\n                    <img className={cnProfile(\"Avatar\")} src={avatarmedium} alt=\"avatar\"/>   \r\n                    <a className={cnProfile(\"Name\")} href={profileurl}>{personaname}</a> \r\n                </div>\r\n                <div className={cnProfile(\"Stat\")}>\r\n                    <div className={cnProfile(\"Text\")}><span className={cnProfile(\"Win\")}>{win}</span> - <span className={cnProfile(\"Lose\")}>{lose}</span></div>\r\n                    <div className={cnProfile(\"Label\")}>Win-Loss</div>\r\n                </div>\r\n                <div className={cnProfile(\"Stat\")}>\r\n                    <div className={cnProfile(\"Text\")}><span className={cnProfile(\"MMR\")}>{estimate} MMR</span></div>\r\n                    <div className={cnProfile(\"Label\")}>Estimate</div>\r\n                </div>\r\n                <div className={cnProfile(\"Stat\")}>\r\n                    <div className={cnProfile(\"Text\")}><span className={cnProfile(\"Winrate\")}>{Math.round(win / (win + lose) * 100)} %</span></div>\r\n                    <div className={cnProfile(\"Label\")}>Winrate</div>\r\n                </div>\r\n            </div>  \r\n            <Recent recent={recent}/>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerInfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport IDForm from \"../IDForm/IDForm\"\r\nimport PlayerInfo from \"../PlayerInfo/PlayerInfo\"\r\nimport Loading from \"../Loading/Loading\"\r\nimport \"./PlayerPage.css\"\r\n\r\nconst PlayerPage = (props:any) => {\r\n    const [player, setPlayer] = useState();\r\n    const [recent, setRecent] = useState();\r\n    const [wl, setWl] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const cnPlayerPage = cn(\"PlayerPage\");\r\n\r\n    const getPlayerInfo = (ID: number) => {\r\n        setLoading(true);\r\n        setSuccess(false);\r\n        fetch(`https://api.opendota.com/api/players/${ID}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setPlayer(data);\r\n            console.log(\"player\", data);\r\n            return fetch(`https://api.opendota.com/api/players/${ID}/recentMatches`);\r\n        })    \r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setRecent(data);\r\n            console.log(\"recent\", data);\r\n            return fetch(`https://api.opendota.com/api/players/${ID}/wl`);\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setWl(data);\r\n            console.log(\"wl\", data);\r\n        })\r\n        .then(() => setSuccess(true))\r\n        .then(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => getPlayerInfo(props.match.params.id),[]);\r\n\r\n    return (\r\n        <main className={cnPlayerPage()}>\r\n            {!success && loading && <Loading/>}\r\n            {success && <PlayerInfo player={player} recent={recent} wl={wl}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default PlayerPage\r\n","import React, {useState} from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./IDForm.css\"\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props{\r\n    value?: string,\r\n    placeholder?: string,\r\n    formatch?: boolean,\r\n    forplayer: boolean\r\n}\r\n\r\nconst IDForm: React.FC<Props> = ({ placeholder, value, forplayer, formatch = !forplayer}) => {\r\n    const [ID,setID] = useState(value || '');\r\n    const path = forplayer ? `/player/${ID}` : `/match/${ID}`;\r\n    const cnID = cn(\"IDForm\");\r\n    return (\r\n        <form className={cnID()}>\r\n            <input type=\"text\" className={cnID(\"Input\")} placeholder={placeholder || \"ID\"} value={value} onChange={(e) => setID(e.target.value)}/>\r\n            <Link className={cnID(\"Submit\")} to={path}>Search</Link>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default IDForm\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\"\nimport MatchPage from \"./components/MatchPage/MatchPage\"\nimport PlayerPage from \"./components/PlayerPage/PlayerPage\"\nimport IDForm from './components/IDForm/IDForm';\nimport \"./App.css\"\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n        <Route path=\"/match/\" exact render={() => <IDForm forplayer={false} placeholder=\"Match ID\"/>} />\n        <Route path=\"/player/\" exact render={() => <IDForm forplayer placeholder=\"Player ID\" value=\"212884473\"/>} />\n        <Route path=\"/match/:id\" component={MatchPage}  />\n        <Route path=\"/player/:id\" component={PlayerPage}  />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}