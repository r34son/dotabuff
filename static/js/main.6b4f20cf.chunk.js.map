{"version":3,"sources":["components/Header/Header.tsx","functions/getHeroName.tsx","components/MatchInfo/MatchInfo.tsx","components/Loading/Loading.tsx","components/MatchPage/MatchPage.tsx","components/Recent/Recent.tsx","components/PlayerInfo/PlayerInfo.tsx","components/PlayerPage/PlayerPage.tsx","components/IDForm/IDForm.tsx","components/MainPage/MainPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styles","makeStyles","AppBar","background","height","Tab","color","fontSize","withRouter","_ref","history","_useState","useState","_useState2","Object","slicedToArray","current","setCurrent","useEffect","location","pathname","includes","classes","react_default","a","createElement","className","position","Tabs","value","onChange","e","centered","textColor","indicatorColor","label","component","Link","to","getHeroes","fetch","then","res","json","data","result","heroes","getHeroName","hero_id","filter","hero","id","name","replace","useStyles","theme","paper","width","margin","backgroundColor","marginTop","spacing","overflowX","flexWrap","table","minWidth","head","body","tablecell","borderBottomColor","headerrow","borderBottom","headercell","gray","text","padding","toppaper","display","justifyContent","chipwin","borderColor","marginLeft","chiplose","lineHeight","MatchInfo","dire_score","duration","match_id","players","radiant_score","radiant_win","start_time","setHeroes","_useState3","_useState4","success","setSuccess","mapToTable","map","player","TableRow","key","hover","TableCell","root","concat","Avatar","alt","src","Typography","personaname","align","kills","deaths","assists","gold_per_min","xp_per_min","last_hits","denies","Fragment","Paper","Math","trunc","timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","timeConverter","Table","size","TableHead","TableBody","Chip","variant","isRadiant","Loading","cnLoading","cn","MatchPage","match","matchInfo","setMatchInfo","_useState5","_useState6","loading","setLoading","ID","params","console","log","components_Loading_Loading","components_MatchInfo_MatchInfo","chip","avatar","border","borderRadius","wrapper","withWidth","recent","break600","setBreak600","onClick","push","elevation","toUpperCase","player_slot","round","header","defineProperty","alignItems","breakpoints","down","flexDirection","maxWidth","tableheadcell","tablebodycell","win","lose","stats","trpaper","PlayerInfo","wl","estimate","mmr_estimate","_player$profile","profile","avatarfull","profileurl","href","scope","components_Recent_Recent","PlayerPage","setPlayer","setRecent","setWl","_useState7","_useState8","_useState9","_useState10","components_PlayerInfo_PlayerInfo","textField","marginRight","input","form","button","boxSizing","& label","& label.Mui-focused","& .MuiOutlinedInput-root","& fieldset","&:hover fieldset","&.Mui-focused fieldset","borderLeftWidth","IDForm","placeholder","forplayer","formatch","setID","path","TextField","defaultValue","target","onSubmit","preventDefault","InputProps","autoFocus","Tooltip","title","disableHoverListener","Button","card","action","divider","marginBottom","MainPage","Card","CardContent","gutterBottom","Divider","CardActions","App","react_router_dom","components_Header_Header","react_router","exact","render","components_IDForm_IDForm","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6b4f20cf.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport \"./Header.css\"\r\n\r\nconst styles = makeStyles({\r\n        AppBar: {\r\n            background: '#222629',\r\n            height: 70\r\n        },\r\n        Tab: {\r\n            color: '#94b4c3',\r\n            fontSize: 15,\r\n            height: 70\r\n        }\r\n    });\r\n\r\nconst Header: React.FC<RouteComponentProps> = ({history}) => {\r\n    const [current, setCurrent] = useState(0);\r\n    const getCurrent = () => {\r\n        switch (true) {\r\n            case history.location.pathname===\"/\": setCurrent(0); break;\r\n            case history.location.pathname.includes(\"/match/\"): setCurrent(1); break;\r\n            case history.location.pathname.includes(\"/player/\"): setCurrent(2); break;\r\n            default: setCurrent(0); break;\r\n        }\r\n    }\r\n    useEffect(getCurrent, [history.location.pathname]);\r\n    const classes = styles();\r\n    return (\r\n        <AppBar className={classes.AppBar} position=\"static\">\r\n            <Tabs  \r\n                value={current} \r\n                onChange={(e, value) => setCurrent(value)} \r\n                centered \r\n                textColor=\"primary\" \r\n                indicatorColor=\"primary\"\r\n            >\r\n                <Tab className={classes.Tab} label=\"Dotabuff\"   component={Link} to=\"/\"/>\r\n                <Tab className={classes.Tab} label=\"Match\"      component={Link} to=\"/match/\"/>\r\n                <Tab className={classes.Tab} label=\"Player\"     component={Link} to=\"/player/\"/>\r\n            </Tabs>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","export const getHeroes = () => {\r\n    return fetch('https://dotabuff.herokuapp.com/getHeroes')\r\n    .then(res => res.json())\r\n    .then(data => data.result.heroes)\r\n}\r\n\r\nexport const getHeroName = (heroes: any, hero_id: number) => \r\n    heroes.filter((hero: any) => hero.id === hero_id)[0].name.replace('npc_dota_hero_','');\r\n \r\n","import React, { useState, useEffect } from 'react'\r\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, makeStyles, Typography, Chip, Avatar } from '@material-ui/core';\r\nimport { getHeroes, getHeroName } from '../../functions/getHeroName';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        width: '90vw',\r\n        margin: '10px auto',\r\n        backgroundColor: '#222629',\r\n        marginTop: theme.spacing(2),\r\n        overflowX: 'auto',\r\n        flexWrap: 'wrap',\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    head: {\r\n        color: '#94b4c3',\r\n    },\r\n    body: {\r\n        color: '#eee2dc'\r\n    },\r\n    tablecell: {\r\n        borderBottomColor:  '#3f51b5',\r\n    },\r\n    headerrow: {\r\n        borderBottom: 'none',\r\n    },\r\n    headercell: {\r\n        color:  '#3f51b5',\r\n    },\r\n    gray: {\r\n        color: '#94b4c3',\r\n        borderBottom:  'none',\r\n    },\r\n    text: {\r\n        color: '#94b4c3',\r\n        padding: theme.spacing(1),\r\n    },\r\n    toppaper: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n    },\r\n    chipwin: {\r\n        color: '#5cdb95',\r\n        borderColor: '#5cdb95',\r\n        marginLeft: 5,\r\n    },\r\n    chiplose: {\r\n        color: '#9a1750',\r\n        borderColor: '#9a1750',\r\n        marginLeft: 5,\r\n    },\r\n    name: {\r\n        color: '#eee2dc',\r\n        marginTop: -40,\r\n        marginLeft: 50,\r\n        lineHeight: '36px',\r\n    },\r\n  }));\r\n\r\ninterface Props{\r\n    data:{\r\n        dire_score: any,\r\n        duration: any,\r\n        first_blood_time: any,\r\n        game_mode: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        players: [{\r\n            abandons: any,\r\n            account_id: any,\r\n            assists: any,\r\n            deaths: any,\r\n            denies: any,\r\n            duration: any,\r\n            gold_per_min: any,\r\n            hero_id: any,\r\n            hero_damage: any,\r\n            hero_healing: any,\r\n            hero_kills: any,\r\n            isRadiant: any,\r\n            kda: any,\r\n            kills: any,\r\n            lane: any,\r\n            last_hits: any,\r\n            level: any,\r\n            lose: any,\r\n            match_id: any,\r\n            personaname: any,\r\n            radiant_win: any,\r\n            start_time: any,\r\n            total_gold: any,\r\n            total_xp: any,\r\n            tower_damage: any,\r\n            win: any,\r\n            xp_per_min: any,\r\n         }],\r\n        /*radiant_gold_adv: (28) [0, -13, -445, -27, -687, -928, -1613, -1626, -2828, -2895, -3287, -5276, -5545, -6263, -5075, -5710, -8206, -8745, -10292, -12561, -13445, -17575, -21072, -24179, -26558, -27509, -33718, -40163]*/\r\n        radiant_score: any,\r\n        radiant_win: any,\r\n        /*radiant_xp_adv: (28) [0, 103, -108, 100, -305, -384, -836, -1258, -2652, -3120, -2520, -2802, -2836, -3671, -1248, -2032, -3802, -4035, -6548, -8713, -11188, -14811, -18719, -22917, -25973, -27359, -36136, -40434]*/\r\n        replay_url: any,\r\n        start_time: any,\r\n        version: any,\r\n    }\r\n}\r\n\r\nconst MatchInfo: React.FC<Props> = ({data}) => {\r\n    const {\r\n        dire_score, duration, match_id, players, radiant_score, radiant_win, start_time\r\n    } = data;\r\n    const [heroes, setHeroes] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const fetchHeroes = () => {\r\n        setSuccess(false);\r\n        getHeroes()\r\n        .then(data => setHeroes(data))\r\n        .then(() => setSuccess(true))\r\n    }\r\n    useEffect(() => fetchHeroes(), [])\r\n    \r\n    const classes = useStyles();\r\n    const timeConverter = (timestamp: number) => {\r\n        var a = new Date(timestamp * 1000);\r\n        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var hour = a.getHours();\r\n        var min = a.getMinutes();\r\n        var sec = a.getSeconds();\r\n        var time = `${date} ${month} ${year} ${hour}:${min}:${sec}`;\r\n        return time;\r\n      }\r\n    const mapToTable: ([]: any[]) => void = players =>  players.map(player => ( \r\n        <TableRow key={player.hero_id} hover>\r\n            <TableCell classes={{body: classes.body, root: classes.tablecell}}>\r\n            {!success && `${player.hero_id}`}\r\n            {success && <Avatar alt=\"avatar\" src={`http://cdn.dota2.com/apps/dota2/images/heroes/${getHeroName(heroes, player.hero_id)}_sb.png`} /*className={classes.avatar} classes={{root: classes.root}}*/ />}\r\n            {success && <Typography className={classes.name}>{player.personaname || \"Nickname\"}</Typography>}\r\n             </TableCell>\r\n            <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{player.kills}/{player.deaths}/{player.assists}</TableCell>\r\n            <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{player.gold_per_min}</TableCell>\r\n            <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{player.xp_per_min}</TableCell>\r\n            <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{player.last_hits}/{player.denies}</TableCell>\r\n        </TableRow>\r\n    ))\r\n    return (\r\n        <>\r\n            <Paper className={`${classes.paper} ${classes.toppaper}`}>\r\n                <Typography className={classes.text}>Match {match_id}</Typography>\r\n                <Typography className={classes.text}>Duration {Math.trunc(duration/60)}:{duration%60}</Typography>\r\n                <Typography className={classes.text}>Started: {`${timeConverter(start_time)}`}</Typography>\r\n            </Paper>\r\n            <Paper className={classes.paper}>    \r\n                <Table className={classes.table} size='small'>\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell classes={{head: classes.head, root: classes.tablecell}}>Hero</TableCell>\r\n                    <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">K/D/A</TableCell>\r\n                    <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">GPM</TableCell>\r\n                    <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">XPM</TableCell>\r\n                    <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">LH/DN</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow classes={{root: classes.gray} }>\r\n                        <TableCell classes={{body: classes.headercell, root: classes.headerrow}} align=\"center\">\r\n                            Radiant {radiant_win ? <Chip label=\"Win\" className={classes.chipwin} variant=\"outlined\"/> : <Chip label=\"Lose\" className={classes.chiplose} variant=\"outlined\"/>}\r\n                        </TableCell>\r\n                        <TableCell classes={{body: classes.body, root: classes.gray}} align=\"left\"> Score: {radiant_score}</TableCell>\r\n                    </TableRow>  \r\n                    {mapToTable(players.filter(player => player.isRadiant))}\r\n                    <TableRow>\r\n                        <TableCell  classes={{body: classes.headercell, root: classes.headerrow}} align=\"center\">\r\n                            Dire {!radiant_win ? <Chip label=\"Win\" className={classes.chipwin} variant=\"outlined\"/> : <Chip label=\"Lose\" className={classes.chiplose} variant=\"outlined\"/>}\r\n                        </TableCell>\r\n                        <TableCell  classes={{body: classes.body, root: classes.gray}} align=\"left\">Score: {dire_score}</TableCell>\r\n                    </TableRow>  \r\n                    {mapToTable(players.filter(player => !player.isRadiant))}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>  \r\n      </>\r\n    )\r\n}\r\n\r\nexport default MatchInfo\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./Loading.css\"\r\n\r\nconst Loading = () => {\r\n    const cnLoading = cn(\"Loading\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={cnLoading()}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect } from 'react'\r\nimport MatchInfo from \"../MatchInfo/MatchInfo\"\r\nimport Loading from '../Loading/Loading';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nconst MatchPage: React.FC<RouteComponentProps<{id: any}>> = ({match}) => {\r\n    const [matchInfo, setMatchInfo] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getMatchInfo = (ID:number) => {\r\n        setLoading(true);\r\n        setSuccess(false);\r\n        fetch(`https://api.opendota.com/api/matches/${ID}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setMatchInfo(data);\r\n            return data;\r\n        })\r\n        .then(data => console.log(data))\r\n        .then(() => setSuccess(true))\r\n        .then(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => getMatchInfo(match.params.id), [match.params.id]);\r\n\r\n    return (\r\n        <main>\r\n            {!success && loading && <Loading/>}\r\n            {success && <MatchInfo data={matchInfo}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MatchPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, Paper, makeStyles, Chip, Avatar, Typography, withWidth } from '@material-ui/core';\r\nimport { getHeroes, getHeroName } from '../../functions/getHeroName'\r\nimport { WithWidth } from '@material-ui/core/withWidth';\r\n\r\ninterface Props{\r\n    recent: [{\r\n        assists: any,\r\n        deaths: any,\r\n        duration: any,\r\n        game_mode: any,\r\n        gold_per_min: any,\r\n        hero_damage: any,\r\n        hero_healing: any,\r\n        hero_id: any,\r\n        is_roaming: any,\r\n        kills: any,\r\n        lane: any,\r\n        lane_role: any,\r\n        last_hits: any,\r\n        leaver_status: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        party_size: any,\r\n        player_slot: any,\r\n        radiant_win: any,\r\n        start_time: any,\r\n        tower_damage: any,\r\n        version: any,\r\n        xp_per_min: any\r\n    }],\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      backgroundColor: '#222629',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    head: {\r\n        color: '#94b4c3',\r\n    },\r\n    body: {\r\n        color: '#eee2dc'\r\n    },\r\n    tablecell: {\r\n        borderBottomColor:  '#3f51b5',\r\n    },\r\n    chip: {\r\n        color: '#5cdb95',\r\n        borderColor: '#5cdb95',\r\n        margin: '20px auto 0',\r\n        display: 'flex',\r\n        width: 200,\r\n    },\r\n    avatar: {\r\n        height: 33,\r\n        width: 59,\r\n    },\r\n    root: {\r\n        border: '1px solid white',\r\n        borderRadius: '0',\r\n    },\r\n    text: {\r\n        color: '#eee2dc',\r\n        marginLeft: 30,\r\n    },\r\n    chipwin: {\r\n        color: '#5cdb95',\r\n        borderColor: '#5cdb95',\r\n        marginLeft: 5,\r\n    },\r\n    chiplose: {\r\n        color: '#9a1750',\r\n        borderColor: '#9a1750',\r\n        marginLeft: 5,\r\n    },\r\n    wrapper: {\r\n        display: 'flex',\r\n        backgroundColor: 'transparent',\r\n        width: 300,\r\n        margin: 0,\r\n    },\r\n  }));\r\n\r\nconst Recent: React.FC<Props & RouteComponentProps & WithWidth> = ({recent, history, width}) => {\r\n    const classes = useStyles();\r\n    const [heroes, setHeroes] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [break600, setBreak600] = useState(width.includes('sm') || width.includes('xs'));\r\n\r\n    useEffect(() => setBreak600(width.includes('sm') || width.includes('xs')), [width])\r\n\r\n    const fetchHeroes = () => {\r\n        setSuccess(false);\r\n        getHeroes()\r\n        .then(data => setHeroes(data))\r\n        .then(() => setSuccess(true))\r\n    }\r\n    useEffect(() => fetchHeroes(), [])\r\n\r\n    return (\r\n        <>\r\n            <Chip label=\"Recent Matches\" className={classes.chip} variant=\"outlined\"/>\r\n            <Paper className={classes.paper}>    \r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">Hero</TableCell>\r\n                            <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">W/L</TableCell>\r\n                            {!break600 && <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">K/D/A</TableCell>}\r\n                            {!break600 && <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">Duration</TableCell>}\r\n                            {!break600 && <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">GPM</TableCell>}\r\n                            {!break600 && <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">XPM</TableCell>}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                <TableBody>\r\n                {recent.map(match => (\r\n                    <TableRow key={match.match_id} hover onClick={() => history.push(`/match/${match.match_id}`)}>\r\n                        <TableCell classes={{body: classes.body, root: classes.tablecell}}>\r\n                            {!success && `${match.hero_id}`}\r\n                            {success && \r\n                            <Paper className={classes.wrapper} elevation={0}>\r\n                                <Avatar alt=\"avatar\" src={`http://cdn.dota2.com/apps/dota2/images/heroes/${getHeroName(heroes, match.hero_id)}_sb.png`} className={classes.avatar} classes={{root: classes.root}} />\r\n                                <Typography className={classes.text}>{getHeroName(heroes, match.hero_id).replace('_',' ').toUpperCase()}</Typography>\r\n                            </Paper>\r\n                            }\r\n                        </TableCell>\r\n                        <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">\r\n                            {success &&\r\n                                match.radiant_win ?\r\n                                (match.player_slot < 128 ? <Chip label=\"Win\" className={classes.chipwin} variant=\"outlined\"/> : <Chip label=\"Lose\" className={classes.chiplose} variant=\"outlined\"/>):\r\n                                (match.player_slot >= 128 ? <Chip label=\"Win\" className={classes.chipwin} variant=\"outlined\"/> : <Chip label=\"Lose\" className={classes.chiplose} variant=\"outlined\"/>)\r\n                            }\r\n                        </TableCell>\r\n                        {!break600 && <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.kills}/{match.deaths}/{match.assists}</TableCell>}\r\n                        {!break600 && <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{Math.round(match.duration/60)}</TableCell>}\r\n                        {!break600 && <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.gold_per_min}</TableCell>}\r\n                        {!break600 && <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.xp_per_min}</TableCell>}\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n      </>  \r\n    )\r\n}\r\n\r\nexport default withWidth()(withRouter(Recent))\r\n","import React from 'react'\r\nimport { Avatar, Paper, Typography, Link, Table, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\r\nimport Recent from '../Recent/Recent';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    wrapper: {\r\n        width: '90vw',\r\n        margin: '20px auto',\r\n        backgroundColor: 'transparent',\r\n    },\r\n    avatar: {\r\n        height: 64,\r\n        width: 64,\r\n    },\r\n    root: {\r\n        border: '1px solid white',\r\n        borderRadius: '50%',\r\n    },\r\n    header: {\r\n        backgroundColor: '#222629',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.down(600)]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    text: {\r\n        marginLeft: 25,\r\n        color: '#3f51b5',\r\n    },\r\n    table: {\r\n        maxWidth: 650,\r\n    },\r\n    head: {\r\n        color: '#94b4c3',\r\n    },\r\n    body: {\r\n        color: '#eee2dc'\r\n    },\r\n    tableheadcell: {\r\n        borderBottomColor:  '#3f51b5',\r\n    },\r\n    tablebodycell: {\r\n        borderBottom:  'none',\r\n    },\r\n    win: { \r\n        color: '#5cdb95',\r\n    },\r\n    lose: {\r\n        color: 'red',\r\n    },\r\n    stats: {\r\n        backgroundColor: '#424242',\r\n        [theme.breakpoints.down(600)]: {\r\n            marginTop: 25,\r\n        },\r\n    },\r\n    trpaper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        backgroundColor: 'transparent',\r\n    }\r\n  }));\r\n\r\ninterface Props{\r\n    player: {\r\n        mmr_estimate: {\r\n            estimate: any\r\n        },\r\n        profile:{\r\n            account_id: any,\r\n            avatar: any,\r\n            avatarmedium: any,\r\n            avatarfull: any,\r\n            lastlogin: any,\r\n            personaname: any,\r\n            profileurl: any\r\n        }\r\n    },\r\n    recent: [{\r\n        assists: any,\r\n        deaths: any,\r\n        duration: any,\r\n        game_mode: any,\r\n        gold_per_min: any,\r\n        hero_damage: any,\r\n        hero_healing: any,\r\n        hero_id: any,\r\n        is_roaming: any,\r\n        kills: any,\r\n        lane: any,\r\n        lane_role: any,\r\n        last_hits: any,\r\n        leaver_status: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        party_size: any,\r\n        player_slot: any,\r\n        radiant_win: any,\r\n        start_time: any,\r\n        tower_damage: any,\r\n        version: any,\r\n        xp_per_min: any\r\n    }],\r\n    wl: {\r\n        win: any,\r\n        lose: any\r\n    },\r\n}\r\n\r\nconst PlayerInfo: React.FC<Props> = ({player, recent, wl}) => {\r\n    const {\r\n        mmr_estimate:{\r\n                estimate\r\n            },\r\n        profile:{\r\n            avatarfull,\r\n            personaname,\r\n            profileurl\r\n    }} = player;\r\n    const {\r\n        win,\r\n        lose\r\n    } = wl;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.wrapper} elevation={0}>\r\n            <Paper className={classes.header}>\r\n                <Paper className={classes.trpaper} elevation={0}>\r\n                    <Avatar alt=\"avatar\" src={avatarfull} className={classes.avatar} classes={{root: classes.root}} />\r\n                    <Link className={classes.text} href={profileurl}>{personaname}</Link>\r\n                </Paper>\r\n                <Paper className={classes.stats}> \r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell classes={{head: classes.head, root: classes.tableheadcell}}>Win-Loss</TableCell>\r\n                            <TableCell classes={{head: classes.head, root: classes.tableheadcell}} align=\"center\">MMR</TableCell>\r\n                            <TableCell classes={{head: classes.head, root: classes.tableheadcell}} align=\"center\">Winrate</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell classes={{body: classes.body, root: classes.tablebodycell}} component=\"th\" scope=\"row\">\r\n                                    <Typography display='inline' className={classes.win}>{win}</Typography>\r\n                                    - \r\n                                    <Typography display='inline' className={classes.lose}>{lose}</Typography> \r\n                                </TableCell>\r\n                                <TableCell classes={{body: classes.body, root: classes.tablebodycell}} align=\"center\">{estimate}</TableCell>\r\n                                <TableCell classes={{body: classes.body, root: classes.tablebodycell}} align=\"center\">{Math.round(win / (win + lose) * 100)} %</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </Paper>\r\n            <Recent recent={recent}/>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default PlayerInfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport PlayerInfo from \"../PlayerInfo/PlayerInfo\"\r\nimport Loading from \"../Loading/Loading\"\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nconst PlayerPage: React.FC<RouteComponentProps<{id: any}>> = ({match}) => {\r\n    const [player, setPlayer] = useState();\r\n    const [recent, setRecent] = useState();\r\n    const [wl, setWl] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const getPlayerInfo = (ID: number) => {\r\n        setLoading(true);\r\n        setSuccess(false);\r\n        fetch(`https://api.opendota.com/api/players/${ID}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setPlayer(data);\r\n            console.log(\"player\", data);\r\n            return fetch(`https://api.opendota.com/api/players/${ID}/recentMatches`);\r\n        })    \r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setRecent(data);\r\n            console.log(\"recent\", data);\r\n            return fetch(`https://api.opendota.com/api/players/${ID}/wl`);\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setWl(data);\r\n            console.log(\"wl\", data);\r\n        })\r\n        .then(() => setSuccess(true))\r\n        .then(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => getPlayerInfo(match.params.id), [match.params.id]);\r\n\r\n    return (\r\n        <main>\r\n            {!success && loading && <Loading/>}\r\n            {success && <PlayerInfo player={player} recent={recent} wl={wl}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default PlayerPage\r\n","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { TextField, Button, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props{\r\n    value?: string,\r\n    placeholder?: string,\r\n    formatch?: boolean,\r\n    forplayer: boolean\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        width: 200,\r\n        color: '#94b4c3'\r\n    },\r\n    gray: {\r\n        color: '#94b4c3'\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    button: {\r\n        height: 56,\r\n        marginTop: 8,\r\n        boxSizing: 'border-box',\r\n    },\r\n    root: {\r\n        '& label': {\r\n            color: '#6b6e70',\r\n        },\r\n        '& label.Mui-focused': {\r\n          color: '#45a29e',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n          '& fieldset': {\r\n            borderColor: '#474b4f',\r\n          },\r\n          '&:hover fieldset': {\r\n            borderColor: '#6b6e70',\r\n          },\r\n          '&.Mui-focused fieldset': {\r\n            borderColor: '#45a29e',\r\n            borderLeftWidth: 6,\r\n            padding: '4px !important', // override inline-style\r\n          },\r\n        },\r\n    },\r\n  });\r\n\r\n\r\nconst IDForm: React.FC<Props> = ({ placeholder, value, forplayer, formatch = !forplayer}) => {\r\n    const [ID,setID] = useState(value || '');\r\n    const classes = useStyles();\r\n    const path = forplayer ? `/player/${ID}` : `/match/${ID}`;\r\n    return (\r\n        <form className={classes.form}>\r\n            <TextField\r\n                label={placeholder}\r\n                defaultValue={ID}\r\n                onChange={(e) => setID(e.target.value)}\r\n                onSubmit={(e) => e.preventDefault()}\r\n                className={classes.textField}\r\n                classes={{\r\n                    root:classes.root\r\n                }}\r\n                InputProps={{className: classes.gray}}\r\n                margin=\"normal\"\r\n                autoFocus={!!value}\r\n                variant=\"outlined\"\r\n            />\r\n            <Tooltip \r\n                title={!ID && 'You must specify ID field'}\r\n                disableHoverListener={!!ID}\r\n            >\r\n                <Button \r\n                    variant=\"outlined\" \r\n                    color=\"primary\" \r\n                    className={classes.button}\r\n                    component={Link} \r\n                    to={path}\r\n                >\r\n                    Search\r\n                </Button>\r\n            </Tooltip>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default IDForm\r\n","import React from 'react'\r\nimport { makeStyles, Card, CardContent, Typography, CardActions, Button, Paper, Tooltip, Divider } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    card: { \r\n        maxWidth: 400,\r\n        backgroundColor: '#222629',\r\n    },\r\n    paper: {\r\n        width: '85vw',\r\n        height: '85vh',\r\n        margin: '30px auto 0',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        backgroundColor: 'transparent',\r\n    },\r\n    button: {\r\n        //color: '#5cdb95',\r\n        //borderColor: '#5cdb95',\r\n    },\r\n    text: {\r\n        color: '#eee2dc',\r\n    },\r\n    header: {\r\n        color: '#5cdb95',\r\n    },\r\n    action: {\r\n        justifyContent: 'center',\r\n    },\r\n    divider: {\r\n        backgroundColor: '#5cdb95',\r\n        marginBottom: 10,\r\n    },\r\n});\r\n\r\nconst MainPage = () => {\r\n    const classes=useStyles();\r\n    return (\r\n        <Paper className={classes.paper} elevation={0}>\r\n              <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" align='center' className={classes.header}>\r\n                        Search Matches\r\n                    </Typography>\r\n                    <Divider variant=\"middle\" className={classes.divider}/>\r\n                    <Typography variant=\"body2\" className={classes.text} component=\"p\">\r\n                       Lorem ipsum dolor, sit amet consectetur adipisicing elit. Similique perspiciatis corrupti optio iure explicabo repellat eos incidunt suscipit. Voluptatum libero nisi, consectetur culpa quod vel eum sed laborum quos fuga inventore reiciendis dolores consequuntur illum. Magni reiciendis quia quam. Quod, laborum corporis. Dolorem laudantium fugiat, exercitationem voluptatum consequatur ipsam ullam libero quaerat deleniti iusto consectetur itaque doloribus, magni quasi voluptate, illo voluptatem distinctio. Debitis adipisci, ratione consectetur facere dolorum id perferendis pariatur nam dicta iusto corporis delectus, sed sunt, nostrum nulla odit exercitationem quae error? A vitae facere, dolorum dolorem incidunt, officiis animi magnam ducimus quam sed voluptatum! Fugit, repellendus.\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.action}>\r\n                    <Tooltip \r\n                    title={'Find out DOTA2 matches statistics!'}\r\n                    >\r\n                        <Button \r\n                            variant=\"outlined\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            component={Link} \r\n                            to=\"/match/\"\r\n                        >\r\n                            Search Match\r\n                        </Button>\r\n                    </Tooltip>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" align='center' className={classes.header}>\r\n                        Search Players\r\n                    </Typography>\r\n                    <Divider variant=\"middle\" className={classes.divider}/>\r\n                    <Typography variant=\"body2\" className={classes.text} component=\"p\">\r\n                       Lorem ipsum dolor, sit amet consectetur adipisicing elit. Similique perspiciatis corrupti optio iure explicabo repellat eos incidunt suscipit. Voluptatum libero nisi, consectetur culpa quod vel eum sed laborum quos fuga inventore reiciendis dolores consequuntur illum. Magni reiciendis quia quam. Quod, laborum corporis. Dolorem laudantium fugiat, exercitationem voluptatum consequatur ipsam ullam libero quaerat deleniti iusto consectetur itaque doloribus, magni quasi voluptate, illo voluptatem distinctio. Debitis adipisci, ratione consectetur facere dolorum id perferendis pariatur nam dicta iusto corporis delectus, sed sunt, nostrum nulla odit exercitationem quae error? A vitae facere, dolorum dolorem incidunt, officiis animi magnam ducimus quam sed voluptatum! Fugit, repellendus.\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.action}>\r\n                    <Tooltip \r\n                    title={'Find out DOTA2 players statistics!'}\r\n                    >\r\n                        <Button \r\n                            variant=\"outlined\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            component={Link} \r\n                            to=\"/player/\"\r\n                        >\r\n                            Search Player\r\n                        </Button>\r\n                    </Tooltip>\r\n                </CardActions>\r\n                </Card>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" align='center' className={classes.header}> \r\n                            Search Matches\r\n                        </Typography>\r\n                        <Divider variant=\"middle\" className={classes.divider}/>\r\n                        <Typography variant=\"body2\" className={classes.text} component=\"p\">\r\n                        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Similique perspiciatis corrupti optio iure explicabo repellat eos incidunt suscipit. Voluptatum libero nisi, consectetur culpa quod vel eum sed laborum quos fuga inventore reiciendis dolores consequuntur illum. Magni reiciendis quia quam. Quod, laborum corporis. Dolorem laudantium fugiat, exercitationem voluptatum consequatur ipsam ullam libero quaerat deleniti iusto consectetur itaque doloribus, magni quasi voluptate, illo voluptatem distinctio. Debitis adipisci, ratione consectetur facere dolorum id perferendis pariatur nam dicta iusto corporis delectus, sed sunt, nostrum nulla odit exercitationem quae error? A vitae facere, dolorum dolorem incidunt, officiis animi magnam ducimus quam sed voluptatum! Fugit, repellendus.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions className={classes.action}>\r\n                        <Tooltip \r\n                        title={'Main page'}\r\n                        >\r\n                            <Button \r\n                                variant=\"outlined\" \r\n                                color=\"primary\" \r\n                                className={classes.button}\r\n                                component={Link} \r\n                                to=\"/\"\r\n                            >\r\n                                Search\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </CardActions>\r\n                </Card>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\"\nimport MatchPage from \"./components/MatchPage/MatchPage\"\nimport PlayerPage from \"./components/PlayerPage/PlayerPage\"\nimport IDForm from './components/IDForm/IDForm';\nimport MainPage from './components/MainPage/MainPage'   \nimport \"./App.css\"\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n        <Route path=\"/\" exact component={MainPage}/>\n        <Route path=\"/match/\" exact render={() => <IDForm forplayer={false} placeholder=\"Match ID\"/>} />\n        <Route path=\"/player/\" exact render={() => <IDForm forplayer placeholder=\"Player ID\" value=\"212884473\"/>} />\n        <Route path=\"/match/:id\" component={MatchPage} />\n        <Route path=\"/player/:id\" component={PlayerPage} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}