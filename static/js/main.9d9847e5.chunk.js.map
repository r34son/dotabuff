{"version":3,"sources":["components/Header/Header.tsx","components/MatchInfo/MatchInfo.tsx","components/Loading/Loading.tsx","components/MatchPage/MatchPage.tsx","components/Recent/Recent.tsx","components/PlayerInfo/PlayerInfo.tsx","components/PlayerPage/PlayerPage.tsx","components/IDForm/IDForm.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styles","makeStyles","AppBar","background","height","Tab","color","fontSize","Header","_useState","useState","window","location","hash","endsWith","includes","_useState2","Object","slicedToArray","current","setCurrent","classes","react_default","a","createElement","className","position","Tabs","value","onChange","e","centered","textColor","indicatorColor","label","component","Link","to","MatchInfo","_ref","data","dire_score","match","cnMatchInfo","cn","Loading","cnLoading","MatchPage","props","setMatch","_useState3","_useState4","success","setSuccess","_useState5","_useState6","loading","setLoading","cnMatch","useEffect","ID","params","id","fetch","concat","then","res","json","console","log","components_Loading_Loading","components_MatchInfo_MatchInfo","useStyles","theme","paper","backgroundColor","marginTop","spacing","overflowX","table","minWidth","head","body","tablecell","borderBottomColor","withRouter","recent","history","Paper","Table","TableHead","TableRow","TableCell","root","align","TableBody","map","key","match_id","hover","onClick","push","scope","hero_id","kills","deaths","assists","Math","round","duration","gold_per_min","xp_per_min","width","margin","avatar","border","borderRadius","PlayerInfo","player","wl","mmr_estimate","estimate","_player$profile","profile","avatarfull","account_id","avatarmedium","lastlogin","personaname","profileurl","win","lose","elevation","Avatar","alt","src","components_Recent_Recent","PlayerPage","setPlayer","setRecent","setWl","_useState7","_useState8","_useState9","_useState10","cnPlayerPage","components_PlayerInfo_PlayerInfo","textField","marginLeft","marginRight","gray","input","display","form","alignItems","button","boxSizing","& label","& label.Mui-focused","& .MuiOutlinedInput-root","& fieldset","borderColor","&:hover fieldset","&.Mui-focused fieldset","borderLeftWidth","padding","IDForm","placeholder","forplayer","formatch","setID","autoFocus","path","TextField","defaultValue","target","onSubmit","preventDefault","InputProps","variant","Button","App","react_router_dom","components_Header_Header","react_router","exact","render","components_IDForm_IDForm","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d9847e5.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport \"./Header.css\"\r\n\r\nconst styles = makeStyles({\r\n        AppBar: {\r\n            background: '#222629',\r\n            height: 70\r\n        },\r\n        Tab: {\r\n            color: '#94b4c3',\r\n            fontSize: 15,\r\n            height: 70\r\n        }\r\n    });\r\n\r\nconst Header = () => {\r\n    const [current, setCurrent] = useState(() => {\r\n        switch (true) {\r\n            case window.location.hash.endsWith(\"#/\"): return 0;\r\n            case window.location.hash.includes(\"#/match/\"): return 1;\r\n            case window.location.hash.includes(\"#/player/\"): return 2;\r\n            default: return 0;\r\n        }\r\n    });\r\n\r\n    const classes = styles();\r\n    return (\r\n        <AppBar className={classes.AppBar} position=\"static\">\r\n            <Tabs  \r\n                value={current} \r\n                onChange={(e, value) => setCurrent(value)} \r\n                centered \r\n                textColor=\"primary\" \r\n                indicatorColor=\"primary\"\r\n            >\r\n                <Tab className={classes.Tab} label=\"Dotabuff\"   component={Link} to=\"/\"/>\r\n                <Tab className={classes.Tab} label=\"Match\"      component={Link} to=\"/match/\"/>\r\n                <Tab className={classes.Tab} label=\"Player\"     component={Link} to=\"/player/\"/>\r\n            </Tabs>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./MatchInfo.css\"\r\n\r\ninterface Props{\r\n    data:{\r\n        dire_score: any,\r\n    },\r\n    match?:{\r\n        params:{\r\n            id: any\r\n        }\r\n    }\r\n}\r\n\r\nconst MatchInfo: React.FC<Props> = ({data, match}) => {\r\n    const {dire_score} = data;\r\n    const cnMatchInfo = cn(\"MatchInfo\");\r\n    return (\r\n        <div className ={cnMatchInfo()}>\r\n            <div>Match Info: {dire_score}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchInfo\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./Loading.css\"\r\n\r\nconst Loading = () => {\r\n    const cnLoading = cn(\"Loading\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={cnLoading()}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect } from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport IDForm from \"../IDForm/IDForm\"\r\nimport MatchInfo from \"../MatchInfo/MatchInfo\"\r\nimport \"./MatchPage.css\"\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst MatchPage = (props:any) => {\r\n    const [match, setMatch] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const cnMatch = cn(\"MatchPage\");\r\n\r\n    const getMatchInfo = (ID:number) => {\r\n        setLoading(true);\r\n        setSuccess(false);\r\n        fetch(`https://api.opendota.com/api/matches/${ID}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setMatch(data);\r\n            return data;\r\n        })\r\n        .then(data => console.log(data))\r\n        .then(() => setSuccess(true))\r\n        .then(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => getMatchInfo(props.match.params.id),[]);\r\n\r\n    return (\r\n        <main className={cnMatch()}>\r\n            {!success && loading && <Loading/>}\r\n           {success && <MatchInfo data={match}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MatchPage\r\n","import React, { useEffect } from 'react'\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, Paper, makeStyles } from '@material-ui/core';\r\n\r\ninterface Props{\r\n    recent: [{\r\n        assists: any,\r\n        deaths: any,\r\n        duration: any,\r\n        game_mode: any,\r\n        gold_per_min: any,\r\n        hero_damage: any,\r\n        hero_healing: any,\r\n        hero_id: any,\r\n        is_roaming: any,\r\n        kills: any,\r\n        lane: any,\r\n        lane_role: any,\r\n        last_hits: any,\r\n        leaver_status: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        party_size: any,\r\n        player_slot: any,\r\n        radiant_win: any,\r\n        start_time: any,\r\n        tower_damage: any,\r\n        version: any,\r\n        xp_per_min: any\r\n    }],\r\n    history?: any,\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      backgroundColor: '#222629',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    head: {\r\n        color: '#94b4c3',\r\n    },\r\n    body: {\r\n        color: '#eee2dc'\r\n    },\r\n    tablecell: {\r\n        borderBottomColor:  '#3f51b5',\r\n    }\r\n  }));\r\n\r\nconst Recent: React.FC<Props & RouteComponentProps> = ({recent, history}) => {\r\n    useEffect(() => console.log(history),[]);\r\n    const classes = useStyles();\r\n    return (\r\n        // <ul className={cnRecent()}>\r\n        //     {recent.map(match => \r\n        //         <Link className={cnRecent(\"Match\")} key={match.match_id} to={`/match/${match.match_id}`}>\r\n        //             <div className={cnRecent(\"Hero\")}>\r\n        //                 {match.hero_id}\r\n        //             </div>\r\n        //             <div className={cnRecent(\"KDA\")}>\r\n        //                 {match.kills}/{match.deaths}/{match.assists}\r\n        //             </div>\r\n        //         </Link>\r\n        //     )}  \r\n        // </ul>    \r\n        <Paper className={classes.paper}>    \r\n            <Table className={classes.table}>\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}}>Hero</TableCell>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">K/D/A</TableCell>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">Duration</TableCell>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">GPM</TableCell>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">XPM</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {recent.map(match => (\r\n                <TableRow key={match.match_id} hover onClick={() => history.push(`/match/${match.match_id}`)}>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} component=\"th\" scope=\"row\">{match.hero_id}</TableCell>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.kills}/{match.deaths}/{match.assists}</TableCell>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{Math.round(match.duration/60)}</TableCell>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.gold_per_min}</TableCell>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.xp_per_min}</TableCell>\r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n      </Paper>  \r\n    )\r\n}\r\n\r\nexport default withRouter(Recent)\r\n","import React, { useEffect } from 'react'\r\nimport Recent from \"../Recent/Recent\"\r\nimport { Avatar, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        width: '90vw',\r\n        margin: '20px auto',\r\n        backgroundColor: 'transparent',\r\n    },\r\n    avatar: {\r\n      height: 64,\r\n      width: 64,\r\n    },\r\n    root: {\r\n        border: '1px solid white',\r\n        borderRadius: '50%',\r\n    },\r\n  });\r\n\r\ninterface Props{\r\n    player: {\r\n        mmr_estimate: {\r\n            estimate: any\r\n        },\r\n        profile:{\r\n            account_id: any,\r\n            avatar: any,\r\n            avatarmedium: any,\r\n            avatarfull: any,\r\n            lastlogin: any,\r\n            personaname: any,\r\n            profileurl: any\r\n        }\r\n    },\r\n    recent: [{\r\n        assists: any,\r\n        deaths: any,\r\n        duration: any,\r\n        game_mode: any,\r\n        gold_per_min: any,\r\n        hero_damage: any,\r\n        hero_healing: any,\r\n        hero_id: any,\r\n        is_roaming: any,\r\n        kills: any,\r\n        lane: any,\r\n        lane_role: any,\r\n        last_hits: any,\r\n        leaver_status: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        party_size: any,\r\n        player_slot: any,\r\n        radiant_win: any,\r\n        start_time: any,\r\n        tower_damage: any,\r\n        version: any,\r\n        xp_per_min: any\r\n    }],\r\n    wl: {\r\n        win: any,\r\n        lose: any\r\n    },\r\n    history?: any\r\n}\r\n\r\nconst PlayerInfo: React.FC<Props> = ({player, recent, wl, history}) => {\r\n    useEffect(() => console.log(history),[]);\r\n    const {\r\n        mmr_estimate:{\r\n                estimate\r\n            },\r\n        profile:{\r\n            account_id,\r\n            avatar,\r\n            avatarmedium,\r\n            avatarfull,\r\n            lastlogin,\r\n            personaname,\r\n            profileurl\r\n    }} = player;\r\n    const {\r\n        win,\r\n        lose\r\n    } = wl;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        // <div className={cnProfile()}>\r\n        //     <div className={cnProfile(\"Header\")}>\r\n        //         <div className={cnProfile(\"Info\")}>\r\n        //             <img className={cnProfile(\"Avatar\")} src={avatarmedium} alt=\"avatar\"/>   \r\n        //             <a className={cnProfile(\"Name\")} href={profileurl}>{personaname}</a> \r\n        //         </div>\r\n        //         <div className={cnProfile(\"Stat\")}>\r\n        //             <div className={cnProfile(\"Text\")}><span className={cnProfile(\"Win\")}>{win}</span> - <span className={cnProfile(\"Lose\")}>{lose}</span></div>\r\n        //             <div className={cnProfile(\"Label\")}>Win-Loss</div>\r\n        //         </div>\r\n        //         <div className={cnProfile(\"Stat\")}>\r\n        //             <div className={cnProfile(\"Text\")}><span className={cnProfile(\"MMR\")}>{estimate} MMR</span></div>\r\n        //             <div className={cnProfile(\"Label\")}>Estimate</div>\r\n        //         </div>\r\n        //         <div className={cnProfile(\"Stat\")}>\r\n        //             <div className={cnProfile(\"Text\")}><span className={cnProfile(\"Winrate\")}>{Math.round(win / (win + lose) * 100)} %</span></div>\r\n        //             <div className={cnProfile(\"Label\")}>Winrate</div>\r\n        //         </div>\r\n        //     </div>  \r\n        //     <Recent recent={recent}/>   \r\n        // </div>\r\n        <Paper className={classes.paper} elevation={0}>\r\n            <Avatar alt=\"avatar\" src={avatarfull} className={classes.avatar} classes={{root: classes.root}} />\r\n            <Recent recent={recent}/>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default PlayerInfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport PlayerInfo from \"../PlayerInfo/PlayerInfo\"\r\nimport Loading from \"../Loading/Loading\"\r\nimport \"./PlayerPage.css\"\r\n\r\nconst PlayerPage = (props:any) => {\r\n    const [player, setPlayer] = useState();\r\n    const [recent, setRecent] = useState();\r\n    const [wl, setWl] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const cnPlayerPage = cn(\"PlayerPage\");\r\n\r\n    const getPlayerInfo = (ID: number) => {\r\n        setLoading(true);\r\n        setSuccess(false);\r\n        fetch(`https://api.opendota.com/api/players/${ID}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setPlayer(data);\r\n            console.log(\"player\", data);\r\n            return fetch(`https://api.opendota.com/api/players/${ID}/recentMatches`);\r\n        })    \r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setRecent(data);\r\n            console.log(\"recent\", data);\r\n            return fetch(`https://api.opendota.com/api/players/${ID}/wl`);\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setWl(data);\r\n            console.log(\"wl\", data);\r\n        })\r\n        .then(() => setSuccess(true))\r\n        .then(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => getPlayerInfo(props.match.params.id),[]);\r\n\r\n    return (\r\n        <main className={cnPlayerPage()}>\r\n            {!success && loading && <Loading/>}\r\n            {success && <PlayerInfo player={player} recent={recent} wl={wl}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default PlayerPage\r\n","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props{\r\n    value?: string,\r\n    placeholder?: string,\r\n    formatch?: boolean,\r\n    forplayer: boolean\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        width: 200,\r\n        color: '#94b4c3'\r\n    },\r\n    gray: {\r\n        color: '#94b4c3'\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    button: {\r\n        height: 56,\r\n        marginTop: 8,\r\n        boxSizing: 'border-box',\r\n    },\r\n    root: {\r\n        '& label': {\r\n            color: '#6b6e70',\r\n        },\r\n        '& label.Mui-focused': {\r\n          color: '#45a29e',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n          '& fieldset': {\r\n            borderColor: '#474b4f',\r\n          },\r\n          '&:hover fieldset': {\r\n            borderColor: '#6b6e70',\r\n          },\r\n          '&.Mui-focused fieldset': {\r\n            borderColor: '#45a29e',\r\n            borderLeftWidth: 6,\r\n            padding: '4px !important', // override inline-style\r\n          },\r\n        },\r\n    },\r\n  });\r\n\r\n\r\nconst IDForm: React.FC<Props> = ({ placeholder, value, forplayer, formatch = !forplayer}) => {\r\n    const [ID,setID] = useState(value || '');\r\n    const autoFocus = value ? true: false;\r\n    const classes = useStyles();\r\n    const path = forplayer ? `/player/${ID}` : `/match/${ID}`;\r\n    return (\r\n        <form className={classes.form}>\r\n            <TextField\r\n                label={placeholder}\r\n                /*placeholder={placeholder}*/\r\n                defaultValue={ID}\r\n                onChange={(e) => setID(e.target.value)}\r\n                onSubmit={(e) => e.preventDefault()}\r\n                className={classes.textField}\r\n                classes={{\r\n                    root:classes.root\r\n                }}\r\n                InputProps={{className: classes.gray}}\r\n                margin=\"normal\"\r\n                autoFocus={autoFocus}\r\n                variant=\"outlined\"\r\n            />\r\n            <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                className={classes.button}\r\n                component={Link} \r\n                to={path}\r\n            >\r\n                Search\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default IDForm\r\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\"\nimport MatchPage from \"./components/MatchPage/MatchPage\"\nimport PlayerPage from \"./components/PlayerPage/PlayerPage\"\nimport IDForm from './components/IDForm/IDForm';\nimport \"./App.css\"\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n        <Route path=\"/match/\" exact render={() => <IDForm forplayer={false} placeholder=\"Match ID\"/>} />\n        <Route path=\"/player/\" exact render={() => <IDForm forplayer placeholder=\"Player ID\" value=\"212884473\"/>} />\n        <Route path=\"/match/:id\" component={MatchPage} />\n        <Route path=\"/player/:id\" component={PlayerPage} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}