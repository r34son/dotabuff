{"version":3,"sources":["components/Header/Header.tsx","components/MatchInfo/MatchInfo.tsx","components/Loading/Loading.tsx","components/MatchPage/MatchPage.tsx","components/Recent/Recent.tsx","components/PlayerInfo/PlayerInfo.tsx","components/PlayerPage/PlayerPage.tsx","components/IDForm/IDForm.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styles","makeStyles","AppBar","background","height","Tab","color","fontSize","withRouter","_ref","history","_useState","useState","_useState2","Object","slicedToArray","current","setCurrent","useEffect","location","pathname","includes","classes","react_default","a","createElement","className","position","Tabs","value","onChange","e","centered","textColor","indicatorColor","label","component","Link","to","MatchInfo","data","dire_score","match","cnMatchInfo","cn","Loading","cnLoading","MatchPage","matchInfo","setMatchInfo","_useState3","_useState4","success","setSuccess","_useState5","_useState6","loading","setLoading","cnMatch","ID","params","id","fetch","concat","then","res","json","console","log","components_Loading_Loading","components_MatchInfo_MatchInfo","useStyles","theme","paper","backgroundColor","marginTop","spacing","overflowX","table","minWidth","head","body","tablecell","borderBottomColor","recent","Paper","Table","TableHead","TableRow","TableCell","root","align","TableBody","map","key","match_id","hover","onClick","push","scope","hero_id","kills","deaths","assists","Math","round","duration","gold_per_min","xp_per_min","wrapper","width","margin","avatar","border","borderRadius","header","display","alignItems","padding","text","marginLeft","maxWidth","tableheadcell","tablebodycell","borderBottom","win","lose","stats","PlayerInfo","player","wl","estimate","mmr_estimate","_player$profile","profile","avatarfull","account_id","avatarmedium","personaname","lastlogin","profileurl","elevation","Avatar","alt","src","href","Typography","components_Recent_Recent","PlayerPage","setPlayer","setRecent","setWl","_useState7","_useState8","_useState9","_useState10","cnPlayerPage","components_PlayerInfo_PlayerInfo","textField","marginRight","gray","input","form","button","boxSizing","& label","& label.Mui-focused","& .MuiOutlinedInput-root","& fieldset","borderColor","&:hover fieldset","&.Mui-focused fieldset","borderLeftWidth","IDForm","placeholder","forplayer","formatch","setID","autoFocus","path","TextField","defaultValue","target","onSubmit","preventDefault","InputProps","variant","Tooltip","title","disableHoverListener","Button","App","react_router_dom","components_Header_Header","react_router","exact","render","components_IDForm_IDForm","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kWAQMA,SAASC,YAAW,CAClBC,OAAQ,CACJC,WAAY,UACZC,OAAQ,IAEZC,IAAK,CACDC,MAAO,UACPC,SAAU,GACVH,OAAQ,OAiCLI,cA7B+B,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QAAaC,EAC3BC,qBAD2BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClDK,EADkDH,EAAA,GACzCI,EADyCJ,EAAA,GAUzDK,oBARmB,WACf,QAAQ,GACJ,IAAgC,KAA3BR,EAAQS,SAASC,SAAeH,EAAW,GAAI,MACpD,KAAKP,EAAQS,SAASC,SAASC,SAAS,WAAYJ,EAAW,GAAI,MACnE,KAAKP,EAAQS,SAASC,SAASC,SAAS,YAAaJ,EAAW,GAAI,MACpE,QAASA,EAAW,KAGN,CAACP,EAAQS,SAASC,WACxC,IAAME,EAAUtB,IAChB,OACIuB,EAAAC,EAAAC,cAACvB,EAAA,EAAD,CAAQwB,UAAWJ,EAAQpB,OAAQyB,SAAS,UACxCJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIC,MAAOb,EACPc,SAAU,SAACC,EAAGF,GAAJ,OAAcZ,EAAWY,IACnCG,UAAQ,EACRC,UAAU,UACVC,eAAe,WAEfX,EAAAC,EAAAC,cAACpB,EAAA,EAAD,CAAKqB,UAAWJ,EAAQjB,IAAK8B,MAAM,WAAaC,UAAWC,IAAMC,GAAG,MACpEf,EAAAC,EAAAC,cAACpB,EAAA,EAAD,CAAKqB,UAAWJ,EAAQjB,IAAK8B,MAAM,QAAaC,UAAWC,IAAMC,GAAG,YACpEf,EAAAC,EAAAC,cAACpB,EAAA,EAAD,CAAKqB,UAAWJ,EAAQjB,IAAK8B,MAAM,SAAaC,UAAWC,IAAMC,GAAG,yBClBrEC,SAVoB,SAAA9B,GAAmB,IAAjB+B,EAAiB/B,EAAjB+B,KAC1BC,GAD2ChC,EAAXiC,MAClBF,EAAdC,YACDE,EAAcC,aAAG,aACvB,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAYiB,KACbpB,EAAAC,EAAAC,cAAA,0BAAkBgB,MCPfI,eATC,WACZ,IAAMC,EAAYF,aAAG,WACrB,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAWoB,SC8BbC,EA9B6C,SAAAtC,GAAa,IAAXiC,EAAWjC,EAAXiC,MAAW/B,EACnCC,qBADmCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9DqC,EAD8DnC,EAAA,GACnDoC,EADmDpC,EAAA,GAAAqC,EAEvCtC,oBAAS,GAF8BuC,EAAArC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAE9DE,EAF8DD,EAAA,GAErDE,EAFqDF,EAAA,GAAAG,EAGvC1C,oBAAS,GAH8B2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAG9DE,EAH8DD,EAAA,GAGrDE,EAHqDF,EAAA,GAI/DG,EAAUd,aAAG,aAkBnB,OAFA1B,oBAAU,kBAdYyC,EAcOjB,EAAMkB,OAAOC,GAbtCJ,GAAW,GACXJ,GAAW,QACXS,MAAK,wCAAAC,OAAyCJ,IAC7CK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAxB,GAEF,OADAS,EAAaT,GACNA,IAEVwB,KAAK,SAAAxB,GAAI,OAAI2B,QAAQC,IAAI5B,KACzBwB,KAAK,kBAAMX,GAAW,KACtBW,KAAK,kBAAMP,GAAW,KAXN,IAACE,GAcwB,IAG1CpC,EAAAC,EAAAC,cAAA,QAAMC,UAAWgC,MACXN,GAAWI,GAAWjC,EAAAC,EAAAC,cAAC4C,EAAD,MACxBjB,GAAW7B,EAAAC,EAAAC,cAAC6C,EAAD,CAAW9B,KAAMQ,8FCDlCuB,EAAYtE,YAAW,SAAAuE,GAAK,MAAK,CACnCC,MAAO,CACLC,gBAAiB,UACjBC,UAAWH,EAAMI,QAAQ,GACzBC,UAAW,QAEbC,MAAO,CACLC,SAAU,KAEZC,KAAM,CACF1E,MAAO,WAEX2E,KAAM,CACF3E,MAAO,WAEX4E,UAAW,CACPC,kBAAoB,cAkCb3E,cA9BuC,SAAAC,GAAuB,IAArB2E,EAAqB3E,EAArB2E,OAAQ1E,EAAaD,EAAbC,QACtDY,EAAUiD,IAChB,OACIhD,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAWJ,EAAQmD,OACtBlD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO5D,UAAWJ,EAAQwD,OAC1BvD,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACAhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACIjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC0D,KAAM1D,EAAQ0D,KAAMU,KAAMpE,EAAQ4D,YAAvD,QACA3D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC0D,KAAM1D,EAAQ0D,KAAMU,KAAMpE,EAAQ4D,WAAYS,MAAM,UAAzE,SACApE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC0D,KAAM1D,EAAQ0D,KAAMU,KAAMpE,EAAQ4D,WAAYS,MAAM,UAAzE,YACApE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC0D,KAAM1D,EAAQ0D,KAAMU,KAAMpE,EAAQ4D,WAAYS,MAAM,UAAzE,OACApE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC0D,KAAM1D,EAAQ0D,KAAMU,KAAMpE,EAAQ4D,WAAYS,MAAM,UAAzE,SAGJpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACCR,EAAOS,IAAI,SAAAnD,GAAK,OACbnB,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAUM,IAAKpD,EAAMqD,SAAUC,OAAK,EAACC,QAAS,kBAAMvF,EAAQwF,KAAR,UAAAnC,OAAuBrB,EAAMqD,aAC7ExE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC2D,KAAM3D,EAAQ2D,KAAMS,KAAMpE,EAAQ4D,WAAY9C,UAAU,KAAK+D,MAAM,OAAOzD,EAAM0D,SACrG7E,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC2D,KAAM3D,EAAQ2D,KAAMS,KAAMpE,EAAQ4D,WAAYS,MAAM,UAAUjD,EAAM2D,MAAzF,IAAiG3D,EAAM4D,OAAvG,IAAgH5D,EAAM6D,SACtHhF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC2D,KAAM3D,EAAQ2D,KAAMS,KAAMpE,EAAQ4D,WAAYS,MAAM,UAAUa,KAAKC,MAAM/D,EAAMgE,SAAS,KAC7GnF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC2D,KAAM3D,EAAQ2D,KAAMS,KAAMpE,EAAQ4D,WAAYS,MAAM,UAAUjD,EAAMiE,cACzFpF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC2D,KAAM3D,EAAQ2D,KAAMS,KAAMpE,EAAQ4D,WAAYS,MAAM,UAAUjD,EAAMkE,oBCrEvGrC,EAAYtE,YAAW,CACzB4G,QAAS,CACLC,MAAO,OACPC,OAAQ,YACRrC,gBAAiB,eAErBsC,OAAQ,CACJ5G,OAAQ,GACR0G,MAAO,IAEXpB,KAAM,CACFuB,OAAQ,kBACRC,aAAc,OAElBC,OAAQ,CACJzC,gBAAiB,UACjB0C,QAAS,OACTC,WAAY,SACZC,QAAS,IAEbC,KAAM,CACFC,WAAY,GACZlH,MAAO,WAEXwE,MAAO,CACH2C,SAAU,KAEdzC,KAAM,CACF1E,MAAO,WAEX2E,KAAM,CACF3E,MAAO,WAEXoH,cAAe,CACXvC,kBAAoB,WAExBwC,cAAe,CACXC,aAAe,QAEnBC,IAAK,CACDvH,MAAO,WAEXwH,KAAM,CACFxH,MAAO,OAEXyH,MAAO,CACHrD,gBAAiB,UACjB8C,WAAY,MA4HLQ,EA1EqB,SAAAvH,GAA0B,IAAxBwH,EAAwBxH,EAAxBwH,OAAQ7C,EAAgB3E,EAAhB2E,OAAQ8C,EAAQzH,EAARyH,GAGtCC,EAUPF,EAXDG,aACQD,SAH8CE,EAarDJ,EARDK,QAIIC,GATkDF,EAMlDG,WANkDH,EAOlDrB,OAPkDqB,EAQlDI,aARkDJ,EASlDE,YAEAG,GAXkDL,EAUlDM,UAVkDN,EAWlDK,aACAE,EAZkDP,EAYlDO,WAGJf,EAEAK,EAFAL,IACAC,EACAI,EADAJ,KAGExG,EAAUiD,IAChB,OAsBIhD,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAWJ,EAAQuF,QAASgC,UAAW,GAC1CtH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAWJ,EAAQ6F,QACtB5F,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAQC,IAAI,SAASC,IAAKT,EAAY7G,UAAWJ,EAAQ0F,OAAQ1F,QAAS,CAACoE,KAAMpE,EAAQoE,QACzFnE,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMX,UAAWJ,EAAQiG,KAAM0B,KAAML,GAAaF,GAClDnH,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAO3D,UAAWJ,EAAQyG,OACtBxG,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO5D,UAAWJ,EAAQwD,OACtBvD,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACAhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACIjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC0D,KAAM1D,EAAQ0D,KAAMU,KAAMpE,EAAQoG,gBAAvD,YACAnG,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC0D,KAAM1D,EAAQ0D,KAAMU,KAAMpE,EAAQoG,eAAgB/B,MAAM,UAA7E,OACApE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC0D,KAAM1D,EAAQ0D,KAAMU,KAAMpE,EAAQoG,eAAgB/B,MAAM,UAA7E,aAGJpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACIrE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACIjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC2D,KAAM3D,EAAQ2D,KAAMS,KAAMpE,EAAQqG,eAAgBvF,UAAU,KAAK+D,MAAM,OACxF5E,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAY9B,QAAQ,SAAS1F,UAAWJ,EAAQuG,KAAMA,GAD1D,IAGItG,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAY9B,QAAQ,SAAS1F,UAAWJ,EAAQwG,MAAOA,IAE3DvG,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC2D,KAAM3D,EAAQ2D,KAAMS,KAAMpE,EAAQqG,eAAgBhC,MAAM,UAAUwC,GACvF5G,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAWnE,QAAS,CAAC2D,KAAM3D,EAAQ2D,KAAMS,KAAMpE,EAAQqG,eAAgBhC,MAAM,UAAUa,KAAKC,MAAMoB,GAAOA,EAAMC,GAAQ,KAAvH,WAMpBvG,EAAAC,EAAAC,cAAC0H,EAAD,CAAQ/D,OAAQA,MCxHbgE,SA3C8C,SAAA3I,GAAa,IAAXiC,EAAWjC,EAAXiC,MAAW/B,EAC1CC,qBAD0CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/DsH,EAD+DpH,EAAA,GACvDwI,EADuDxI,EAAA,GAAAqC,EAE1CtC,qBAF0CuC,EAAArC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAE/DkC,EAF+DjC,EAAA,GAEvDmG,EAFuDnG,EAAA,GAAAG,EAGlD1C,qBAHkD2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAG/D4E,EAH+D3E,EAAA,GAG3DgG,EAH2DhG,EAAA,GAAAiG,EAIxC5I,oBAAS,GAJ+B6I,EAAA3I,OAAAC,EAAA,EAAAD,CAAA0I,EAAA,GAI/DpG,EAJ+DqG,EAAA,GAItDpG,EAJsDoG,EAAA,GAAAC,EAKxC9I,oBAAS,GAL+B+I,EAAA7I,OAAAC,EAAA,EAAAD,CAAA4I,EAAA,GAK/DlG,EAL+DmG,EAAA,GAKtDlG,EALsDkG,EAAA,GAMhEC,EAAehH,aAAG,cA6BxB,OAFA1B,oBAAU,kBAzBayC,EAyBOjB,EAAMkB,OAAOC,GAxBvCJ,GAAW,GACXJ,GAAW,QACXS,MAAK,wCAAAC,OAAyCJ,IAC7CK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAxB,GAGF,OAFA6G,EAAU7G,GACV2B,QAAQC,IAAI,SAAU5B,GACfsB,MAAK,wCAAAC,OAAyCJ,EAAzC,qBAEfK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAxB,GAGF,OAFA8G,EAAU9G,GACV2B,QAAQC,IAAI,SAAU5B,GACfsB,MAAK,wCAAAC,OAAyCJ,EAAzC,UAEfK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAxB,GACF+G,EAAM/G,GACN2B,QAAQC,IAAI,KAAM5B,KAErBwB,KAAK,kBAAMX,GAAW,KACtBW,KAAK,kBAAMP,GAAW,KAtBL,IAACE,GAyBwB,IAG3CpC,EAAAC,EAAAC,cAAA,QAAMC,UAAWkI,MACXxG,GAAWI,GAAWjC,EAAAC,EAAAC,cAAC4C,EAAD,MACvBjB,GAAW7B,EAAAC,EAAAC,cAACoI,EAAD,CAAY5B,OAAQA,EAAQ7C,OAAQA,EAAQ8C,GAAIA,kCCjClE3D,EAAYtE,YAAW,CACzB6J,UAAW,CACPtC,WAAY,GACZuC,YAAa,GACbjD,MAAO,IACPxG,MAAO,WAEX0J,KAAM,CACF1J,MAAO,WAEX2J,MAAO,CACH7C,QAAS,QAEb8C,KAAM,CACF9C,QAAS,OACTC,WAAY,UAEhB8C,OAAQ,CACJ/J,OAAQ,GACRuE,UAAW,EACXyF,UAAW,cAEf1E,KAAM,CACF2E,UAAW,CACP/J,MAAO,WAEXgK,sBAAuB,CACrBhK,MAAO,WAETiK,2BAA4B,CAC1BC,aAAc,CACZC,YAAa,WAEfC,mBAAoB,CAClBD,YAAa,WAEfE,yBAA0B,CACxBF,YAAa,UACbG,gBAAiB,EACjBtD,QAAS,sBAgDNuD,EAzCiB,SAAApK,GAA6D,IAA1DqK,EAA0DrK,EAA1DqK,YAAajJ,EAA6CpB,EAA7CoB,MAAOkJ,EAAsCtK,EAAtCsK,UAAsCpK,GAAAF,EAA3BuK,SAC3CpK,mBAASiB,GAAS,KADoDhB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClFgD,EADkF9C,EAAA,GAC/EoK,EAD+EpK,EAAA,GAAAqC,EAEjEtC,oBAAS,GAFwDuC,EAAArC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAGnFgI,GAHmF/H,EAAA,GAAAA,EAAA,KAGvEtB,GACZP,EAAUiD,IACV4G,EAAOJ,EAAS,WAAAhH,OAAcJ,GAAd,UAAAI,OAA+BJ,GACrD,OACIpC,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,EAAQ4I,MACrB3I,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CACIjJ,MAAO2I,EAEPO,aAAc1H,EACd7B,SAAU,SAACC,GAAD,OAAOkJ,EAAMlJ,EAAEuJ,OAAOzJ,QAChC0J,SAAU,SAACxJ,GAAD,OAAOA,EAAEyJ,kBACnB9J,UAAWJ,EAAQwI,UACnBxI,QAAS,CACLoE,KAAKpE,EAAQoE,MAEjB+F,WAAY,CAAC/J,UAAWJ,EAAQ0I,MAChCjD,OAAO,SACPmE,UAAWA,EACXQ,QAAQ,aAEZnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CACIC,OAAQjI,GAAM,4BACdkI,uBAAwBlI,GAExBpC,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CACIJ,QAAQ,WACRpL,MAAM,UACNoB,UAAWJ,EAAQ6I,OACnB/H,UAAWC,IACXC,GAAI6I,GALR,aC/DDY,SAdO,WACpB,OACExK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuK,EAAA,EAAD,KACEzK,EAAAC,EAAAC,cAACwK,EAAD,MACA1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOf,KAAK,UAAUgB,OAAK,EAACC,OAAQ,kBAAM7K,EAAAC,EAAAC,cAAC4K,EAAD,CAAQtB,WAAW,EAAOD,YAAY,gBAChFvJ,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOf,KAAK,WAAWgB,OAAK,EAACC,OAAQ,kBAAM7K,EAAAC,EAAAC,cAAC4K,EAAD,CAAQtB,WAAS,EAACD,YAAY,YAAYjJ,MAAM,iBAC3FN,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOf,KAAK,aAAa/I,UAAWW,IACpCxB,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAOf,KAAK,cAAc/I,UAAWgH,QCJzBkD,QACW,cAA7BC,OAAOpL,SAASqL,UAEe,UAA7BD,OAAOpL,SAASqL,UAEhBD,OAAOpL,SAASqL,SAAS9J,MACvB,2DCbN+J,IAASL,OAAO7K,EAAAC,EAAAC,cAACiL,EAAD,MAASC,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/I,KAAK,SAAAgJ,GACjCA,EAAaC","file":"static/js/main.7c5c75a1.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Link, Route, RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport \"./Header.css\"\r\n\r\nconst styles = makeStyles({\r\n        AppBar: {\r\n            background: '#222629',\r\n            height: 70\r\n        },\r\n        Tab: {\r\n            color: '#94b4c3',\r\n            fontSize: 15,\r\n            height: 70\r\n        }\r\n    });\r\n\r\nconst Header: React.FC<RouteComponentProps> = ({history}) => {\r\n    const [current, setCurrent] = useState();\r\n    const getCurrent = () => {\r\n        switch (true) {\r\n            case history.location.pathname==\"/\": setCurrent(0); break;\r\n            case history.location.pathname.includes(\"/match/\"): setCurrent(1); break;\r\n            case history.location.pathname.includes(\"/player/\"): setCurrent(2); break;\r\n            default: setCurrent(0); break;\r\n        }\r\n    }\r\n    useEffect(getCurrent, [history.location.pathname]);\r\n    const classes = styles();\r\n    return (\r\n        <AppBar className={classes.AppBar} position=\"static\">\r\n            <Tabs  \r\n                value={current} \r\n                onChange={(e, value) => setCurrent(value)} \r\n                centered \r\n                textColor=\"primary\" \r\n                indicatorColor=\"primary\"\r\n            >\r\n                <Tab className={classes.Tab} label=\"Dotabuff\"   component={Link} to=\"/\"/>\r\n                <Tab className={classes.Tab} label=\"Match\"      component={Link} to=\"/match/\"/>\r\n                <Tab className={classes.Tab} label=\"Player\"     component={Link} to=\"/player/\"/>\r\n            </Tabs>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header)\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./MatchInfo.css\"\r\n\r\ninterface Props{\r\n    data:{\r\n        dire_score: any,\r\n    },\r\n    match?:{\r\n        params:{\r\n            id: any\r\n        }\r\n    }\r\n}\r\n\r\nconst MatchInfo: React.FC<Props> = ({data, match}) => {\r\n    const {dire_score} = data;\r\n    const cnMatchInfo = cn(\"MatchInfo\");\r\n    return (\r\n        <div className ={cnMatchInfo()}>\r\n            <div>Match Info: {dire_score}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchInfo\r\n","import React from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport \"./Loading.css\"\r\n\r\nconst Loading = () => {\r\n    const cnLoading = cn(\"Loading\");\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={cnLoading()}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect } from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport IDForm from \"../IDForm/IDForm\"\r\nimport MatchInfo from \"../MatchInfo/MatchInfo\"\r\nimport \"./MatchPage.css\"\r\nimport Loading from '../Loading/Loading';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nconst MatchPage: React.FC<RouteComponentProps<{id: any}>> = ({match}) => {\r\n    const [matchInfo, setMatchInfo] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const cnMatch = cn(\"MatchPage\");\r\n\r\n    const getMatchInfo = (ID:number) => {\r\n        setLoading(true);\r\n        setSuccess(false);\r\n        fetch(`https://api.opendota.com/api/matches/${ID}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setMatchInfo(data);\r\n            return data;\r\n        })\r\n        .then(data => console.log(data))\r\n        .then(() => setSuccess(true))\r\n        .then(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => getMatchInfo(match.params.id),[]);\r\n\r\n    return (\r\n        <main className={cnMatch()}>\r\n            {!success && loading && <Loading/>}\r\n           {success && <MatchInfo data={matchInfo}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default MatchPage\r\n","import React, { useEffect } from 'react'\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, Paper, makeStyles } from '@material-ui/core';\r\n\r\ninterface Props{\r\n    recent: [{\r\n        assists: any,\r\n        deaths: any,\r\n        duration: any,\r\n        game_mode: any,\r\n        gold_per_min: any,\r\n        hero_damage: any,\r\n        hero_healing: any,\r\n        hero_id: any,\r\n        is_roaming: any,\r\n        kills: any,\r\n        lane: any,\r\n        lane_role: any,\r\n        last_hits: any,\r\n        leaver_status: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        party_size: any,\r\n        player_slot: any,\r\n        radiant_win: any,\r\n        start_time: any,\r\n        tower_damage: any,\r\n        version: any,\r\n        xp_per_min: any\r\n    }],\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      backgroundColor: '#222629',\r\n      marginTop: theme.spacing(3),\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    head: {\r\n        color: '#94b4c3',\r\n    },\r\n    body: {\r\n        color: '#eee2dc'\r\n    },\r\n    tablecell: {\r\n        borderBottomColor:  '#3f51b5',\r\n    }\r\n  }));\r\n\r\nconst Recent: React.FC<Props & RouteComponentProps> = ({recent, history}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.paper}>    \r\n            <Table className={classes.table}>\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}}>Hero</TableCell>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">K/D/A</TableCell>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">Duration</TableCell>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">GPM</TableCell>\r\n                <TableCell classes={{head: classes.head, root: classes.tablecell}} align=\"center\">XPM</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {recent.map(match => (\r\n                <TableRow key={match.match_id} hover onClick={() => history.push(`/match/${match.match_id}`)}>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} component=\"th\" scope=\"row\">{match.hero_id}</TableCell>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.kills}/{match.deaths}/{match.assists}</TableCell>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{Math.round(match.duration/60)}</TableCell>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.gold_per_min}</TableCell>\r\n                    <TableCell classes={{body: classes.body, root: classes.tablecell}} align=\"center\">{match.xp_per_min}</TableCell>\r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n      </Paper>  \r\n    )\r\n}\r\n\r\nexport default withRouter(Recent)\r\n","import React from 'react'\r\nimport { Avatar, Paper, Typography, Link, Table, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\r\nimport Recent from '../Recent/Recent';\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        width: '90vw',\r\n        margin: '20px auto',\r\n        backgroundColor: 'transparent',\r\n    },\r\n    avatar: {\r\n        height: 64,\r\n        width: 64,\r\n    },\r\n    root: {\r\n        border: '1px solid white',\r\n        borderRadius: '50%',\r\n    },\r\n    header: {\r\n        backgroundColor: '#222629',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n    },\r\n    text: {\r\n        marginLeft: 25,\r\n        color: '#3f51b5',\r\n    },\r\n    table: {\r\n        maxWidth: 650,\r\n    },\r\n    head: {\r\n        color: '#94b4c3',\r\n    },\r\n    body: {\r\n        color: '#eee2dc'\r\n    },\r\n    tableheadcell: {\r\n        borderBottomColor:  '#3f51b5',\r\n    },\r\n    tablebodycell: {\r\n        borderBottom:  'none',\r\n    },\r\n    win: { \r\n        color: '#5cdb95',\r\n    },\r\n    lose: {\r\n        color: 'red',\r\n    },\r\n    stats: {\r\n        backgroundColor: '#424242',\r\n        marginLeft: 50,\r\n    },\r\n  });\r\n\r\ninterface Props{\r\n    player: {\r\n        mmr_estimate: {\r\n            estimate: any\r\n        },\r\n        profile:{\r\n            account_id: any,\r\n            avatar: any,\r\n            avatarmedium: any,\r\n            avatarfull: any,\r\n            lastlogin: any,\r\n            personaname: any,\r\n            profileurl: any\r\n        }\r\n    },\r\n    recent: [{\r\n        assists: any,\r\n        deaths: any,\r\n        duration: any,\r\n        game_mode: any,\r\n        gold_per_min: any,\r\n        hero_damage: any,\r\n        hero_healing: any,\r\n        hero_id: any,\r\n        is_roaming: any,\r\n        kills: any,\r\n        lane: any,\r\n        lane_role: any,\r\n        last_hits: any,\r\n        leaver_status: any,\r\n        lobby_type: any,\r\n        match_id: any,\r\n        party_size: any,\r\n        player_slot: any,\r\n        radiant_win: any,\r\n        start_time: any,\r\n        tower_damage: any,\r\n        version: any,\r\n        xp_per_min: any\r\n    }],\r\n    wl: {\r\n        win: any,\r\n        lose: any\r\n    },\r\n}\r\n\r\nconst PlayerInfo: React.FC<Props> = ({player, recent, wl}) => {\r\n    const {\r\n        mmr_estimate:{\r\n                estimate\r\n            },\r\n        profile:{\r\n            account_id,\r\n            avatar,\r\n            avatarmedium,\r\n            avatarfull,\r\n            lastlogin,\r\n            personaname,\r\n            profileurl\r\n    }} = player;\r\n    const {\r\n        win,\r\n        lose\r\n    } = wl;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        // <div className={cnProfile()}>\r\n        //     <div className={cnProfile(\"Header\")}>\r\n        //         <div className={cnProfile(\"Info\")}>\r\n        //             <img className={cnProfile(\"Avatar\")} src={avatarmedium} alt=\"avatar\"/>   \r\n        //             <a className={cnProfile(\"Name\")} href={profileurl}>{personaname}</a> \r\n        //         </div>\r\n        //         <div className={cnProfile(\"Stat\")}>\r\n        //             <div className={cnProfile(\"Text\")}><span className={cnProfile(\"Win\")}>{win}</span> - <span className={cnProfile(\"Lose\")}>{lose}</span></div>\r\n        //             <div className={cnProfile(\"Label\")}>Win-Loss</div>\r\n        //         </div>\r\n        //         <div className={cnProfile(\"Stat\")}>\r\n        //             <div className={cnProfile(\"Text\")}><span className={cnProfile(\"MMR\")}>{estimate} MMR</span></div>\r\n        //             <div className={cnProfile(\"Label\")}>Estimate</div>\r\n        //         </div>\r\n        //         <div className={cnProfile(\"Stat\")}>\r\n        //             <div className={cnProfile(\"Text\")}><span className={cnProfile(\"Winrate\")}>{Math.round(win / (win + lose) * 100)} %</span></div>\r\n        //             <div className={cnProfile(\"Label\")}>Winrate</div>\r\n        //         </div>\r\n        //     </div>  \r\n        //     <Recent recent={recent}/>   \r\n        // </div>\r\n        <Paper className={classes.wrapper} elevation={0}>\r\n            <Paper className={classes.header}>\r\n                <Avatar alt=\"avatar\" src={avatarfull} className={classes.avatar} classes={{root: classes.root}} />\r\n                <Link className={classes.text} href={profileurl}>{personaname}</Link>\r\n                <Paper className={classes.stats}> \r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell classes={{head: classes.head, root: classes.tableheadcell}}>Win-Loss</TableCell>\r\n                            <TableCell classes={{head: classes.head, root: classes.tableheadcell}} align=\"center\">MMR</TableCell>\r\n                            <TableCell classes={{head: classes.head, root: classes.tableheadcell}} align=\"center\">Winrate</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell classes={{body: classes.body, root: classes.tablebodycell}} component=\"th\" scope=\"row\">\r\n                                    <Typography display='inline' className={classes.win}>{win}</Typography>\r\n                                    - \r\n                                    <Typography display='inline' className={classes.lose}>{lose}</Typography> \r\n                                </TableCell>\r\n                                <TableCell classes={{body: classes.body, root: classes.tablebodycell}} align=\"center\">{estimate}</TableCell>\r\n                                <TableCell classes={{body: classes.body, root: classes.tablebodycell}} align=\"center\">{Math.round(win / (win + lose) * 100)} %</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </Paper>\r\n            <Recent recent={recent}/>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default PlayerInfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport { cn } from '@bem-react/classname';\r\nimport PlayerInfo from \"../PlayerInfo/PlayerInfo\"\r\nimport Loading from \"../Loading/Loading\"\r\nimport \"./PlayerPage.css\"\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nconst PlayerPage: React.FC<RouteComponentProps<{id: any}>> = ({match}) => {\r\n    const [player, setPlayer] = useState();\r\n    const [recent, setRecent] = useState();\r\n    const [wl, setWl] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const cnPlayerPage = cn(\"PlayerPage\");\r\n\r\n    const getPlayerInfo = (ID: number) => {\r\n        setLoading(true);\r\n        setSuccess(false);\r\n        fetch(`https://api.opendota.com/api/players/${ID}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setPlayer(data);\r\n            console.log(\"player\", data);\r\n            return fetch(`https://api.opendota.com/api/players/${ID}/recentMatches`);\r\n        })    \r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setRecent(data);\r\n            console.log(\"recent\", data);\r\n            return fetch(`https://api.opendota.com/api/players/${ID}/wl`);\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setWl(data);\r\n            console.log(\"wl\", data);\r\n        })\r\n        .then(() => setSuccess(true))\r\n        .then(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => getPlayerInfo(match.params.id),[]);\r\n\r\n    return (\r\n        <main className={cnPlayerPage()}>\r\n            {!success && loading && <Loading/>}\r\n            {success && <PlayerInfo player={player} recent={recent} wl={wl}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default PlayerPage\r\n","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { TextField, Button, Tooltip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ninterface Props{\r\n    value?: string,\r\n    placeholder?: string,\r\n    formatch?: boolean,\r\n    forplayer: boolean\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        marginLeft: 10,\r\n        marginRight: 10,\r\n        width: 200,\r\n        color: '#94b4c3'\r\n    },\r\n    gray: {\r\n        color: '#94b4c3'\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    button: {\r\n        height: 56,\r\n        marginTop: 8,\r\n        boxSizing: 'border-box',\r\n    },\r\n    root: {\r\n        '& label': {\r\n            color: '#6b6e70',\r\n        },\r\n        '& label.Mui-focused': {\r\n          color: '#45a29e',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n          '& fieldset': {\r\n            borderColor: '#474b4f',\r\n          },\r\n          '&:hover fieldset': {\r\n            borderColor: '#6b6e70',\r\n          },\r\n          '&.Mui-focused fieldset': {\r\n            borderColor: '#45a29e',\r\n            borderLeftWidth: 6,\r\n            padding: '4px !important', // override inline-style\r\n          },\r\n        },\r\n    },\r\n  });\r\n\r\n\r\nconst IDForm: React.FC<Props> = ({ placeholder, value, forplayer, formatch = !forplayer}) => {\r\n    const [ID,setID] = useState(value || '');\r\n    const [open, setOpen] = useState(false);\r\n    const autoFocus = value ? true: false;\r\n    const classes = useStyles();\r\n    const path = forplayer ? `/player/${ID}` : `/match/${ID}`;\r\n    return (\r\n        <form className={classes.form}>\r\n            <TextField\r\n                label={placeholder}\r\n                /*placeholder={placeholder}*/\r\n                defaultValue={ID}\r\n                onChange={(e) => setID(e.target.value)}\r\n                onSubmit={(e) => e.preventDefault()}\r\n                className={classes.textField}\r\n                classes={{\r\n                    root:classes.root\r\n                }}\r\n                InputProps={{className: classes.gray}}\r\n                margin=\"normal\"\r\n                autoFocus={autoFocus}\r\n                variant=\"outlined\"\r\n            />\r\n            <Tooltip \r\n                title={!ID && 'You must specify ID field'}\r\n                disableHoverListener={!!ID}\r\n            >\r\n                <Button \r\n                    variant=\"outlined\" \r\n                    color=\"primary\" \r\n                    className={classes.button}\r\n                    component={Link} \r\n                    to={path}\r\n                >\r\n                    Search\r\n                </Button>\r\n            </Tooltip>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default IDForm\r\n","import React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\"\nimport MatchPage from \"./components/MatchPage/MatchPage\"\nimport PlayerPage from \"./components/PlayerPage/PlayerPage\"\nimport IDForm from './components/IDForm/IDForm';\nimport \"./App.css\"\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n        <Route path=\"/match/\" exact render={() => <IDForm forplayer={false} placeholder=\"Match ID\"/>} />\n        <Route path=\"/player/\" exact render={() => <IDForm forplayer placeholder=\"Player ID\" value=\"212884473\"/>} />\n        <Route path=\"/match/:id\" component={MatchPage} />\n        <Route path=\"/player/:id\" component={PlayerPage} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}